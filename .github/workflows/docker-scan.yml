name: Docker Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 2 * * 1'

jobs:
  scan-dockerfiles:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      actions: read
      # security-events: write
      # checks: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build images
        run: |
          cd database && docker build -q -t localbuild/database:latest .

      - name: Scan database image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: localbuild/database:latest
          # format: 'table'
          format: sarif
          output: database-results.sarif
          exit-code: 0
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

      - name: Upload database scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: database-results.sarif

      # - name: Upload database vulnerability scan results
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: database-results
      #     path: database-results.sarif
      #     retention-days: 30

      # - name: Scan geoserver image
      #   uses: aquasecurity/trivy-action@0.28.0
      #   with:
      #     image-ref: localbuild/geoserver:latest
      #     # format: 'table'
      #     format: sarif
      #     output: geoserver-results.sarif
      #     exit-code: 0
      #     ignore-unfixed: true
      #     vuln-type: os,library
      #     severity: CRITICAL,HIGH

      # - name: Upload geoserver vulnerability scan results
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: geoserver-results
      #     path: geoserver-results.sarif
      #     retention-days: 30
